// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.11.4
// source: fish.proto

package plr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 请求房间
type C3080001 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameKindID    int32                  `protobuf:"varint,1,opt,name=GameKindID,proto3" json:"GameKindID,omitempty"` // 游戏类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080001) Reset() {
	*x = C3080001{}
	mi := &file_fish_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080001) ProtoMessage() {}

func (x *C3080001) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080001.ProtoReflect.Descriptor instead.
func (*C3080001) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{0}
}

func (x *C3080001) GetGameKindID() int32 {
	if x != nil {
		return x.GameKindID
	}
	return 0
}

type S3080001 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Rooms         []*S3080001_RoomInfo   `protobuf:"bytes,2,rep,name=Rooms,proto3" json:"Rooms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080001) Reset() {
	*x = S3080001{}
	mi := &file_fish_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080001) ProtoMessage() {}

func (x *S3080001) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080001.ProtoReflect.Descriptor instead.
func (*S3080001) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{1}
}

func (x *S3080001) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080001) GetRooms() []*S3080001_RoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

// 进入房间
type C3080002 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomID        int32                  `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	UserID        string                 `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080002) Reset() {
	*x = C3080002{}
	mi := &file_fish_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080002) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080002) ProtoMessage() {}

func (x *C3080002) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080002.ProtoReflect.Descriptor instead.
func (*C3080002) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{2}
}

func (x *C3080002) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *C3080002) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type S3080002 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	RoomID        int32                  `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	TableID       int32                  `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,4,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	Seats         []*S3080002_SeatInfo   `protobuf:"bytes,5,rep,name=Seats,proto3" json:"Seats,omitempty"`
	Fishes        []*S3080002_FishInfo   `protobuf:"bytes,6,rep,name=Fishes,proto3" json:"Fishes,omitempty"`
	Skills        []*S3080002_SkillInfo  `protobuf:"bytes,7,rep,name=Skills,proto3" json:"Skills,omitempty"`
	TideID        int32                  `protobuf:"varint,8,opt,name=TideID,proto3" json:"TideID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080002) Reset() {
	*x = S3080002{}
	mi := &file_fish_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080002) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080002) ProtoMessage() {}

func (x *S3080002) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080002.ProtoReflect.Descriptor instead.
func (*S3080002) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{3}
}

func (x *S3080002) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080002) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *S3080002) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *S3080002) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *S3080002) GetSeats() []*S3080002_SeatInfo {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *S3080002) GetFishes() []*S3080002_FishInfo {
	if x != nil {
		return x.Fishes
	}
	return nil
}

func (x *S3080002) GetSkills() []*S3080002_SkillInfo {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *S3080002) GetTideID() int32 {
	if x != nil {
		return x.TideID
	}
	return 0
}

// 炮台种类
type C3080003 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080003) Reset() {
	*x = C3080003{}
	mi := &file_fish_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080003) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080003) ProtoMessage() {}

func (x *C3080003) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080003.ProtoReflect.Descriptor instead.
func (*C3080003) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{4}
}

func (x *C3080003) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type S3080003 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Cannons       []*S3080003_CannonInfo `protobuf:"bytes,2,rep,name=Cannons,proto3" json:"Cannons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080003) Reset() {
	*x = S3080003{}
	mi := &file_fish_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080003) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080003) ProtoMessage() {}

func (x *S3080003) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080003.ProtoReflect.Descriptor instead.
func (*S3080003) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{5}
}

func (x *S3080003) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080003) GetCannons() []*S3080003_CannonInfo {
	if x != nil {
		return x.Cannons
	}
	return nil
}

// 图鉴
type C3080004 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080004) Reset() {
	*x = C3080004{}
	mi := &file_fish_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080004) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080004) ProtoMessage() {}

func (x *C3080004) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080004.ProtoReflect.Descriptor instead.
func (*C3080004) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{6}
}

type S3080004 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Kinds         []*S3080004_FishKind   `protobuf:"bytes,2,rep,name=Kinds,proto3" json:"Kinds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080004) Reset() {
	*x = S3080004{}
	mi := &file_fish_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080004) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080004) ProtoMessage() {}

func (x *S3080004) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080004.ProtoReflect.Descriptor instead.
func (*S3080004) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{7}
}

func (x *S3080004) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080004) GetKinds() []*S3080004_FishKind {
	if x != nil {
		return x.Kinds
	}
	return nil
}

// 使用技能
type C3080005 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,3,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	SkillType     int32                  `protobuf:"varint,4,opt,name=SkillType,proto3" json:"SkillType,omitempty"` //0:冻结 1:自动 2:锁定
	OpType        int32                  `protobuf:"varint,5,opt,name=OpType,proto3" json:"OpType,omitempty"`       //0:使用技能 1:取消技能
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080005) Reset() {
	*x = C3080005{}
	mi := &file_fish_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080005) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080005) ProtoMessage() {}

func (x *C3080005) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080005.ProtoReflect.Descriptor instead.
func (*C3080005) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{8}
}

func (x *C3080005) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *C3080005) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *C3080005) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *C3080005) GetSkillType() int32 {
	if x != nil {
		return x.SkillType
	}
	return 0
}

func (x *C3080005) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

type S3080005 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	SkillType     int32                  `protobuf:"varint,2,opt,name=SkillType,proto3" json:"SkillType,omitempty"` //0:冻结 1:自动 2:锁定
	OpType        int32                  `protobuf:"varint,3,opt,name=OpType,proto3" json:"OpType,omitempty"`       //0:使用技能 1:取消技能
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080005) Reset() {
	*x = S3080005{}
	mi := &file_fish_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080005) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080005) ProtoMessage() {}

func (x *S3080005) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080005.ProtoReflect.Descriptor instead.
func (*S3080005) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{9}
}

func (x *S3080005) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080005) GetSkillType() int32 {
	if x != nil {
		return x.SkillType
	}
	return 0
}

func (x *S3080005) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

// 购买炮台
type C3080006 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`      //用户ID
	CannonID      int32                  `protobuf:"varint,2,opt,name=CannonID,proto3" json:"CannonID,omitempty"` //炮台ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080006) Reset() {
	*x = C3080006{}
	mi := &file_fish_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080006) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080006) ProtoMessage() {}

func (x *C3080006) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080006.ProtoReflect.Descriptor instead.
func (*C3080006) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{10}
}

func (x *C3080006) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *C3080006) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

type S3080006 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	CostWealth    float64                `protobuf:"fixed64,2,opt,name=CostWealth,proto3" json:"CostWealth,omitempty"`
	CannonID      int32                  `protobuf:"varint,3,opt,name=CannonID,proto3" json:"CannonID,omitempty"`
	Lefttime      int64                  `protobuf:"varint,4,opt,name=Lefttime,proto3" json:"Lefttime,omitempty"` //剩余使用秒数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080006) Reset() {
	*x = S3080006{}
	mi := &file_fish_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080006) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080006) ProtoMessage() {}

func (x *S3080006) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080006.ProtoReflect.Descriptor instead.
func (*S3080006) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{11}
}

func (x *S3080006) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080006) GetCostWealth() float64 {
	if x != nil {
		return x.CostWealth
	}
	return 0
}

func (x *S3080006) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

func (x *S3080006) GetLefttime() int64 {
	if x != nil {
		return x.Lefttime
	}
	return 0
}

// 装载炮台
type C3080007 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CannonID      int32                  `protobuf:"varint,2,opt,name=CannonID,proto3" json:"CannonID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080007) Reset() {
	*x = C3080007{}
	mi := &file_fish_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080007) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080007) ProtoMessage() {}

func (x *C3080007) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080007.ProtoReflect.Descriptor instead.
func (*C3080007) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{12}
}

func (x *C3080007) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *C3080007) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

type S3080007 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	CannonID      int32                  `protobuf:"varint,2,opt,name=CannonID,proto3" json:"CannonID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080007) Reset() {
	*x = S3080007{}
	mi := &file_fish_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080007) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080007) ProtoMessage() {}

func (x *S3080007) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080007.ProtoReflect.Descriptor instead.
func (*S3080007) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{13}
}

func (x *S3080007) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080007) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

// 重入房间
type C3080008 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	RoomID        int32                  `protobuf:"varint,3,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	TableID       int32                  `protobuf:"varint,4,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,5,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C3080008) Reset() {
	*x = C3080008{}
	mi := &file_fish_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C3080008) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C3080008) ProtoMessage() {}

func (x *C3080008) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C3080008.ProtoReflect.Descriptor instead.
func (*C3080008) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{14}
}

func (x *C3080008) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *C3080008) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *C3080008) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *C3080008) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

type S3080008 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetCode       int32                  `protobuf:"varint,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	RoomID        int32                  `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	TableID       int32                  `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,4,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	Seats         []*S3080008_SeatInfo   `protobuf:"bytes,5,rep,name=Seats,proto3" json:"Seats,omitempty"`
	Fishes        []*S3080008_FishInfo   `protobuf:"bytes,6,rep,name=Fishes,proto3" json:"Fishes,omitempty"`
	Skills        []*S3080008_SkillInfo  `protobuf:"bytes,7,rep,name=Skills,proto3" json:"Skills,omitempty"`
	TideID        int32                  `protobuf:"varint,8,opt,name=TideID,proto3" json:"TideID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080008) Reset() {
	*x = S3080008{}
	mi := &file_fish_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080008) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080008) ProtoMessage() {}

func (x *S3080008) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080008.ProtoReflect.Descriptor instead.
func (*S3080008) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{15}
}

func (x *S3080008) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *S3080008) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *S3080008) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *S3080008) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *S3080008) GetSeats() []*S3080008_SeatInfo {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *S3080008) GetFishes() []*S3080008_FishInfo {
	if x != nil {
		return x.Fishes
	}
	return nil
}

func (x *S3080008) GetSkills() []*S3080008_SkillInfo {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *S3080008) GetTideID() int32 {
	if x != nil {
		return x.TideID
	}
	return 0
}

// 放鱼
type P3080001 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fishes        []*P3080001_FishInfo   `protobuf:"bytes,1,rep,name=Fishes,proto3" json:"Fishes,omitempty"`
	RoomID        int32                  `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	TableID       int32                  `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080001) Reset() {
	*x = P3080001{}
	mi := &file_fish_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080001) ProtoMessage() {}

func (x *P3080001) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080001.ProtoReflect.Descriptor instead.
func (*P3080001) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{16}
}

func (x *P3080001) GetFishes() []*P3080001_FishInfo {
	if x != nil {
		return x.Fishes
	}
	return nil
}

func (x *P3080001) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *P3080001) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

// 玩家进入房间
type P3080002 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,3,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	UserName      string                 `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserWealth    float64                `protobuf:"fixed64,5,opt,name=UserWealth,proto3" json:"UserWealth,omitempty"` //当前金币
	FaceID        int32                  `protobuf:"varint,6,opt,name=FaceID,proto3" json:"FaceID,omitempty"`
	CannonID      int32                  `protobuf:"varint,7,opt,name=CannonID,proto3" json:"CannonID,omitempty"` //炮台ID
	Ratio         float64                `protobuf:"fixed64,8,opt,name=Ratio,proto3" json:"Ratio,omitempty"`      //炮台倍率
	VipLevel      int32                  `protobuf:"varint,9,opt,name=VipLevel,proto3" json:"VipLevel,omitempty"`
	FaceFrameID   int32                  `protobuf:"varint,10,opt,name=FaceFrameID,proto3" json:"FaceFrameID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080002) Reset() {
	*x = P3080002{}
	mi := &file_fish_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080002) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080002) ProtoMessage() {}

func (x *P3080002) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080002.ProtoReflect.Descriptor instead.
func (*P3080002) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{17}
}

func (x *P3080002) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *P3080002) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080002) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080002) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *P3080002) GetUserWealth() float64 {
	if x != nil {
		return x.UserWealth
	}
	return 0
}

func (x *P3080002) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *P3080002) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

func (x *P3080002) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *P3080002) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *P3080002) GetFaceFrameID() int32 {
	if x != nil {
		return x.FaceFrameID
	}
	return 0
}

// 玩家离开
type P3080003 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,2,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	UserID        string                 `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080003) Reset() {
	*x = P3080003{}
	mi := &file_fish_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080003) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080003) ProtoMessage() {}

func (x *P3080003) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080003.ProtoReflect.Descriptor instead.
func (*P3080003) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{18}
}

func (x *P3080003) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080003) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080003) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

// 通知其他玩家发射子弹信息
type P3080004 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BulletID      int32                  `protobuf:"varint,1,opt,name=BulletID,proto3" json:"BulletID,omitempty"`
	UserID        string                 `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,4,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	VectorX       float64                `protobuf:"fixed64,5,opt,name=VectorX,proto3" json:"VectorX,omitempty"` //发射向量
	VectorY       float64                `protobuf:"fixed64,6,opt,name=VectorY,proto3" json:"VectorY,omitempty"` //发射向量
	Speed         int32                  `protobuf:"varint,7,opt,name=Speed,proto3" json:"Speed,omitempty"`
	UserAmount    float64                `protobuf:"fixed64,8,opt,name=UserAmount,proto3" json:"UserAmount,omitempty"` //玩家剩余金币
	FishID        int32                  `protobuf:"varint,9,opt,name=FishID,proto3" json:"FishID,omitempty"`          //锁定时指定锁定哪条鱼
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080004) Reset() {
	*x = P3080004{}
	mi := &file_fish_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080004) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080004) ProtoMessage() {}

func (x *P3080004) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080004.ProtoReflect.Descriptor instead.
func (*P3080004) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{19}
}

func (x *P3080004) GetBulletID() int32 {
	if x != nil {
		return x.BulletID
	}
	return 0
}

func (x *P3080004) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *P3080004) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080004) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080004) GetVectorX() float64 {
	if x != nil {
		return x.VectorX
	}
	return 0
}

func (x *P3080004) GetVectorY() float64 {
	if x != nil {
		return x.VectorY
	}
	return 0
}

func (x *P3080004) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *P3080004) GetUserAmount() float64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

func (x *P3080004) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

// 冰冻技能完成
type P3080005 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080005) Reset() {
	*x = P3080005{}
	mi := &file_fish_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080005) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080005) ProtoMessage() {}

func (x *P3080005) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080005.ProtoReflect.Descriptor instead.
func (*P3080005) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{20}
}

func (x *P3080005) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

// 捕获鱼
type P3080006 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BulletID      int32                  `protobuf:"varint,1,opt,name=BulletID,proto3" json:"BulletID,omitempty"`
	FishID        int32                  `protobuf:"varint,2,opt,name=FishID,proto3" json:"FishID,omitempty"`
	TableID       int32                  `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,4,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	Ratio         float64                `protobuf:"fixed64,5,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	AddWealth     float64                `protobuf:"fixed64,6,opt,name=AddWealth,proto3" json:"AddWealth,omitempty"`
	UserAmount    float64                `protobuf:"fixed64,7,opt,name=UserAmount,proto3" json:"UserAmount,omitempty"` //玩家剩余金币
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080006) Reset() {
	*x = P3080006{}
	mi := &file_fish_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080006) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080006) ProtoMessage() {}

func (x *P3080006) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080006.ProtoReflect.Descriptor instead.
func (*P3080006) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{21}
}

func (x *P3080006) GetBulletID() int32 {
	if x != nil {
		return x.BulletID
	}
	return 0
}

func (x *P3080006) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *P3080006) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080006) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080006) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *P3080006) GetAddWealth() float64 {
	if x != nil {
		return x.AddWealth
	}
	return 0
}

func (x *P3080006) GetUserAmount() float64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

// 使用技能
type P3080007 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,3,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	SkillType     int32                  `protobuf:"varint,4,opt,name=SkillType,proto3" json:"SkillType,omitempty"`
	OpType        int32                  `protobuf:"varint,5,opt,name=OpType,proto3" json:"OpType,omitempty"` //0:使用技能 1:取消技能
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080007) Reset() {
	*x = P3080007{}
	mi := &file_fish_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080007) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080007) ProtoMessage() {}

func (x *P3080007) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080007.ProtoReflect.Descriptor instead.
func (*P3080007) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{22}
}

func (x *P3080007) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *P3080007) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080007) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080007) GetSkillType() int32 {
	if x != nil {
		return x.SkillType
	}
	return 0
}

func (x *P3080007) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

// 切换倍率
type P3080008 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,2,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	Ratio         float64                `protobuf:"fixed64,3,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080008) Reset() {
	*x = P3080008{}
	mi := &file_fish_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080008) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080008) ProtoMessage() {}

func (x *P3080008) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080008.ProtoReflect.Descriptor instead.
func (*P3080008) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{23}
}

func (x *P3080008) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080008) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080008) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

// 鱼潮开始
type P3080009 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fishes        []*P3080009_FishInfo   `protobuf:"bytes,1,rep,name=Fishes,proto3" json:"Fishes,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080009) Reset() {
	*x = P3080009{}
	mi := &file_fish_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080009) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080009) ProtoMessage() {}

func (x *P3080009) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080009.ProtoReflect.Descriptor instead.
func (*P3080009) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{24}
}

func (x *P3080009) GetFishes() []*P3080009_FishInfo {
	if x != nil {
		return x.Fishes
	}
	return nil
}

func (x *P3080009) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

// 捕获电鳗鱼
type P3080010 struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	BulletID      int32                   `protobuf:"varint,1,opt,name=BulletID,proto3" json:"BulletID,omitempty"`
	FishID        int32                   `protobuf:"varint,2,opt,name=FishID,proto3" json:"FishID,omitempty"`
	TableID       int32                   `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                   `protobuf:"varint,4,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	Ratio         float64                 `protobuf:"fixed64,5,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	AddWealth     float64                 `protobuf:"fixed64,6,opt,name=AddWealth,proto3" json:"AddWealth,omitempty"`
	Fishes        []*P3080010_CaptureFish `protobuf:"bytes,7,rep,name=Fishes,proto3" json:"Fishes,omitempty"`           //被电死的鱼
	UserAmount    float64                 `protobuf:"fixed64,8,opt,name=UserAmount,proto3" json:"UserAmount,omitempty"` //玩家剩余金币
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080010) Reset() {
	*x = P3080010{}
	mi := &file_fish_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080010) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080010) ProtoMessage() {}

func (x *P3080010) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080010.ProtoReflect.Descriptor instead.
func (*P3080010) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{25}
}

func (x *P3080010) GetBulletID() int32 {
	if x != nil {
		return x.BulletID
	}
	return 0
}

func (x *P3080010) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *P3080010) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080010) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080010) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *P3080010) GetAddWealth() float64 {
	if x != nil {
		return x.AddWealth
	}
	return 0
}

func (x *P3080010) GetFishes() []*P3080010_CaptureFish {
	if x != nil {
		return x.Fishes
	}
	return nil
}

func (x *P3080010) GetUserAmount() float64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

// BOSS鱼出现
type P3080011 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080011) Reset() {
	*x = P3080011{}
	mi := &file_fish_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080011) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080011) ProtoMessage() {}

func (x *P3080011) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080011.ProtoReflect.Descriptor instead.
func (*P3080011) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{26}
}

func (x *P3080011) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

// 购买炮台后金币推送
type P3080013 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,2,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	UserWealth    float64                `protobuf:"fixed64,3,opt,name=UserWealth,proto3" json:"UserWealth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080013) Reset() {
	*x = P3080013{}
	mi := &file_fish_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080013) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080013) ProtoMessage() {}

func (x *P3080013) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080013.ProtoReflect.Descriptor instead.
func (*P3080013) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{27}
}

func (x *P3080013) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080013) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080013) GetUserWealth() float64 {
	if x != nil {
		return x.UserWealth
	}
	return 0
}

// 炮台切换后推送
type P3080014 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,2,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	CannonID      int32                  `protobuf:"varint,3,opt,name=CannonID,proto3" json:"CannonID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080014) Reset() {
	*x = P3080014{}
	mi := &file_fish_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080014) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080014) ProtoMessage() {}

func (x *P3080014) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080014.ProtoReflect.Descriptor instead.
func (*P3080014) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{28}
}

func (x *P3080014) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080014) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *P3080014) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

// 场内所有鱼
type P3080015 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomID        int32                  `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	Fishes        []*P3080015_FishInfo   `protobuf:"bytes,3,rep,name=Fishes,proto3" json:"Fishes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080015) Reset() {
	*x = P3080015{}
	mi := &file_fish_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080015) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080015) ProtoMessage() {}

func (x *P3080015) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080015.ProtoReflect.Descriptor instead.
func (*P3080015) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{29}
}

func (x *P3080015) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *P3080015) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080015) GetFishes() []*P3080015_FishInfo {
	if x != nil {
		return x.Fishes
	}
	return nil
}

// 鱼潮即将开始
type P3080016 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	TideID        int32                  `protobuf:"varint,2,opt,name=TideID,proto3" json:"TideID,omitempty"`
	WaveTime      int64                  `protobuf:"varint,3,opt,name=WaveTime,proto3" json:"WaveTime,omitempty"` //波浪时间 单位毫秒
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080016) Reset() {
	*x = P3080016{}
	mi := &file_fish_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080016) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080016) ProtoMessage() {}

func (x *P3080016) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080016.ProtoReflect.Descriptor instead.
func (*P3080016) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{30}
}

func (x *P3080016) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *P3080016) GetTideID() int32 {
	if x != nil {
		return x.TideID
	}
	return 0
}

func (x *P3080016) GetWaveTime() int64 {
	if x != nil {
		return x.WaveTime
	}
	return 0
}

// 鱼潮时实时推送鱼潮
type P3080017 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fishes        []int32                `protobuf:"varint,1,rep,packed,name=Fishes,proto3" json:"Fishes,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080017) Reset() {
	*x = P3080017{}
	mi := &file_fish_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080017) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080017) ProtoMessage() {}

func (x *P3080017) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080017.ProtoReflect.Descriptor instead.
func (*P3080017) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{31}
}

func (x *P3080017) GetFishes() []int32 {
	if x != nil {
		return x.Fishes
	}
	return nil
}

func (x *P3080017) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

// 玩家离开
type N3080001 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	LeaveType     int32                  `protobuf:"varint,2,opt,name=LeaveType,proto3" json:"LeaveType,omitempty"` //0:掉线,1:离开 客户端不用传
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *N3080001) Reset() {
	*x = N3080001{}
	mi := &file_fish_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *N3080001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N3080001) ProtoMessage() {}

func (x *N3080001) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N3080001.ProtoReflect.Descriptor instead.
func (*N3080001) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{32}
}

func (x *N3080001) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *N3080001) GetLeaveType() int32 {
	if x != nil {
		return x.LeaveType
	}
	return 0
}

// 发射子弹
type N3080002 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BulletID      int32                  `protobuf:"varint,1,opt,name=BulletID,proto3" json:"BulletID,omitempty"`
	UserID        string                 `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,3,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,4,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	VectorX       float64                `protobuf:"fixed64,5,opt,name=VectorX,proto3" json:"VectorX,omitempty"` //发射向量
	VectorY       float64                `protobuf:"fixed64,6,opt,name=VectorY,proto3" json:"VectorY,omitempty"` //发射向量
	Speed         int32                  `protobuf:"varint,7,opt,name=Speed,proto3" json:"Speed,omitempty"`
	Ratio         float64                `protobuf:"fixed64,8,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	FishID        int32                  `protobuf:"varint,9,opt,name=FishID,proto3" json:"FishID,omitempty"` //锁定时指定锁定哪条鱼
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *N3080002) Reset() {
	*x = N3080002{}
	mi := &file_fish_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *N3080002) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N3080002) ProtoMessage() {}

func (x *N3080002) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N3080002.ProtoReflect.Descriptor instead.
func (*N3080002) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{33}
}

func (x *N3080002) GetBulletID() int32 {
	if x != nil {
		return x.BulletID
	}
	return 0
}

func (x *N3080002) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *N3080002) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *N3080002) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *N3080002) GetVectorX() float64 {
	if x != nil {
		return x.VectorX
	}
	return 0
}

func (x *N3080002) GetVectorY() float64 {
	if x != nil {
		return x.VectorY
	}
	return 0
}

func (x *N3080002) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *N3080002) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *N3080002) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

// 子弹碰到鱼
type N3080003 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BulletID      int32                  `protobuf:"varint,1,opt,name=BulletID,proto3" json:"BulletID,omitempty"`
	UserID        string                 `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FishID        int32                  `protobuf:"varint,3,opt,name=FishID,proto3" json:"FishID,omitempty"`
	TableID       int32                  `protobuf:"varint,4,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,5,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *N3080003) Reset() {
	*x = N3080003{}
	mi := &file_fish_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *N3080003) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N3080003) ProtoMessage() {}

func (x *N3080003) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N3080003.ProtoReflect.Descriptor instead.
func (*N3080003) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{34}
}

func (x *N3080003) GetBulletID() int32 {
	if x != nil {
		return x.BulletID
	}
	return 0
}

func (x *N3080003) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *N3080003) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *N3080003) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *N3080003) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

// 切换炮台倍率
type N3080004 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Ratio         float64                `protobuf:"fixed64,2,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *N3080004) Reset() {
	*x = N3080004{}
	mi := &file_fish_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *N3080004) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*N3080004) ProtoMessage() {}

func (x *N3080004) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use N3080004.ProtoReflect.Descriptor instead.
func (*N3080004) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{35}
}

func (x *N3080004) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *N3080004) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

type S3080001_RoomInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RoomID         int32                  `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	BaseAmount     float64                `protobuf:"fixed64,2,opt,name=BaseAmount,proto3" json:"BaseAmount,omitempty"`
	MinEnterAmount float64                `protobuf:"fixed64,3,opt,name=MinEnterAmount,proto3" json:"MinEnterAmount,omitempty"`
	MaxEnterAmount float64                `protobuf:"fixed64,4,opt,name=MaxEnterAmount,proto3" json:"MaxEnterAmount,omitempty"`
	RoomName       string                 `protobuf:"bytes,5,opt,name=RoomName,proto3" json:"RoomName,omitempty"`
	MinRatio       float64                `protobuf:"fixed64,6,opt,name=MinRatio,proto3" json:"MinRatio,omitempty"`
	MaxRatio       float64                `protobuf:"fixed64,7,opt,name=MaxRatio,proto3" json:"MaxRatio,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *S3080001_RoomInfo) Reset() {
	*x = S3080001_RoomInfo{}
	mi := &file_fish_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080001_RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080001_RoomInfo) ProtoMessage() {}

func (x *S3080001_RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080001_RoomInfo.ProtoReflect.Descriptor instead.
func (*S3080001_RoomInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{1, 0}
}

func (x *S3080001_RoomInfo) GetRoomID() int32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *S3080001_RoomInfo) GetBaseAmount() float64 {
	if x != nil {
		return x.BaseAmount
	}
	return 0
}

func (x *S3080001_RoomInfo) GetMinEnterAmount() float64 {
	if x != nil {
		return x.MinEnterAmount
	}
	return 0
}

func (x *S3080001_RoomInfo) GetMaxEnterAmount() float64 {
	if x != nil {
		return x.MaxEnterAmount
	}
	return 0
}

func (x *S3080001_RoomInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *S3080001_RoomInfo) GetMinRatio() float64 {
	if x != nil {
		return x.MinRatio
	}
	return 0
}

func (x *S3080001_RoomInfo) GetMaxRatio() float64 {
	if x != nil {
		return x.MaxRatio
	}
	return 0
}

type S3080002_SeatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,2,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	FaceID        int32                  `protobuf:"varint,3,opt,name=FaceID,proto3" json:"FaceID,omitempty"`
	UserID        string                 `protobuf:"bytes,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName      string                 `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserAmount    float64                `protobuf:"fixed64,6,opt,name=UserAmount,proto3" json:"UserAmount,omitempty"`
	CannonID      int32                  `protobuf:"varint,7,opt,name=CannonID,proto3" json:"CannonID,omitempty"` //炮台ID
	Ratio         float64                `protobuf:"fixed64,8,opt,name=Ratio,proto3" json:"Ratio,omitempty"`      //炮台倍率
	VipLevel      int32                  `protobuf:"varint,9,opt,name=VipLevel,proto3" json:"VipLevel,omitempty"`
	FaceFrameID   int32                  `protobuf:"varint,10,opt,name=FaceFrameID,proto3" json:"FaceFrameID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080002_SeatInfo) Reset() {
	*x = S3080002_SeatInfo{}
	mi := &file_fish_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080002_SeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080002_SeatInfo) ProtoMessage() {}

func (x *S3080002_SeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080002_SeatInfo.ProtoReflect.Descriptor instead.
func (*S3080002_SeatInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{3, 0}
}

func (x *S3080002_SeatInfo) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *S3080002_SeatInfo) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *S3080002_SeatInfo) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *S3080002_SeatInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *S3080002_SeatInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *S3080002_SeatInfo) GetUserAmount() float64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

func (x *S3080002_SeatInfo) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

func (x *S3080002_SeatInfo) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *S3080002_SeatInfo) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *S3080002_SeatInfo) GetFaceFrameID() int32 {
	if x != nil {
		return x.FaceFrameID
	}
	return 0
}

type S3080002_FishInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FishID        int32                  `protobuf:"varint,1,opt,name=FishID,proto3" json:"FishID,omitempty"`
	KindID        int32                  `protobuf:"varint,2,opt,name=KindID,proto3" json:"KindID,omitempty"`
	Path          int32                  `protobuf:"varint,3,opt,name=Path,proto3" json:"Path,omitempty"`
	StartTime     int64                  `protobuf:"varint,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	CurrentTime   int64                  `protobuf:"varint,5,opt,name=CurrentTime,proto3" json:"CurrentTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080002_FishInfo) Reset() {
	*x = S3080002_FishInfo{}
	mi := &file_fish_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080002_FishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080002_FishInfo) ProtoMessage() {}

func (x *S3080002_FishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080002_FishInfo.ProtoReflect.Descriptor instead.
func (*S3080002_FishInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{3, 1}
}

func (x *S3080002_FishInfo) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *S3080002_FishInfo) GetKindID() int32 {
	if x != nil {
		return x.KindID
	}
	return 0
}

func (x *S3080002_FishInfo) GetPath() int32 {
	if x != nil {
		return x.Path
	}
	return 0
}

func (x *S3080002_FishInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *S3080002_FishInfo) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

type S3080002_SkillInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,3,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	SkillType     int32                  `protobuf:"varint,4,opt,name=SkillType,proto3" json:"SkillType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080002_SkillInfo) Reset() {
	*x = S3080002_SkillInfo{}
	mi := &file_fish_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080002_SkillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080002_SkillInfo) ProtoMessage() {}

func (x *S3080002_SkillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080002_SkillInfo.ProtoReflect.Descriptor instead.
func (*S3080002_SkillInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{3, 2}
}

func (x *S3080002_SkillInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *S3080002_SkillInfo) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *S3080002_SkillInfo) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *S3080002_SkillInfo) GetSkillType() int32 {
	if x != nil {
		return x.SkillType
	}
	return 0
}

type S3080003_CannonInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`               //炮台名称
	PeriodDay     int32                  `protobuf:"varint,3,opt,name=PeriodDay,proto3" json:"PeriodDay,omitempty"`    //有效天数
	CostWealth    float64                `protobuf:"fixed64,4,opt,name=CostWealth,proto3" json:"CostWealth,omitempty"` //购买消耗财富
	UseStatus     int32                  `protobuf:"varint,5,opt,name=useStatus,proto3" json:"useStatus,omitempty"`    //0 未购买,1:已购买未装备, 2:已装备
	Lefttime      int64                  `protobuf:"varint,6,opt,name=Lefttime,proto3" json:"Lefttime,omitempty"`      //剩余使用秒数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080003_CannonInfo) Reset() {
	*x = S3080003_CannonInfo{}
	mi := &file_fish_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080003_CannonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080003_CannonInfo) ProtoMessage() {}

func (x *S3080003_CannonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080003_CannonInfo.ProtoReflect.Descriptor instead.
func (*S3080003_CannonInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{5, 0}
}

func (x *S3080003_CannonInfo) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *S3080003_CannonInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *S3080003_CannonInfo) GetPeriodDay() int32 {
	if x != nil {
		return x.PeriodDay
	}
	return 0
}

func (x *S3080003_CannonInfo) GetCostWealth() float64 {
	if x != nil {
		return x.CostWealth
	}
	return 0
}

func (x *S3080003_CannonInfo) GetUseStatus() int32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

func (x *S3080003_CannonInfo) GetLefttime() int64 {
	if x != nil {
		return x.Lefttime
	}
	return 0
}

type S3080004_FishKind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            int32                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	KindName      string                 `protobuf:"bytes,2,opt,name=KindName,proto3" json:"KindName,omitempty"`
	Score         float64                `protobuf:"fixed64,3,opt,name=Score,proto3" json:"Score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080004_FishKind) Reset() {
	*x = S3080004_FishKind{}
	mi := &file_fish_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080004_FishKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080004_FishKind) ProtoMessage() {}

func (x *S3080004_FishKind) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080004_FishKind.ProtoReflect.Descriptor instead.
func (*S3080004_FishKind) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{7, 0}
}

func (x *S3080004_FishKind) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *S3080004_FishKind) GetKindName() string {
	if x != nil {
		return x.KindName
	}
	return ""
}

func (x *S3080004_FishKind) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type S3080008_SeatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableID       int32                  `protobuf:"varint,1,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,2,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	FaceID        int32                  `protobuf:"varint,3,opt,name=FaceID,proto3" json:"FaceID,omitempty"`
	UserID        string                 `protobuf:"bytes,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName      string                 `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserAmount    float64                `protobuf:"fixed64,6,opt,name=UserAmount,proto3" json:"UserAmount,omitempty"`
	CannonID      int32                  `protobuf:"varint,7,opt,name=CannonID,proto3" json:"CannonID,omitempty"` //炮台ID
	Ratio         float64                `protobuf:"fixed64,8,opt,name=Ratio,proto3" json:"Ratio,omitempty"`      //炮台倍率
	VipLevel      int32                  `protobuf:"varint,9,opt,name=VipLevel,proto3" json:"VipLevel,omitempty"`
	FaceFrameID   int32                  `protobuf:"varint,10,opt,name=FaceFrameID,proto3" json:"FaceFrameID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080008_SeatInfo) Reset() {
	*x = S3080008_SeatInfo{}
	mi := &file_fish_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080008_SeatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080008_SeatInfo) ProtoMessage() {}

func (x *S3080008_SeatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080008_SeatInfo.ProtoReflect.Descriptor instead.
func (*S3080008_SeatInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{15, 0}
}

func (x *S3080008_SeatInfo) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *S3080008_SeatInfo) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *S3080008_SeatInfo) GetFaceID() int32 {
	if x != nil {
		return x.FaceID
	}
	return 0
}

func (x *S3080008_SeatInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *S3080008_SeatInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *S3080008_SeatInfo) GetUserAmount() float64 {
	if x != nil {
		return x.UserAmount
	}
	return 0
}

func (x *S3080008_SeatInfo) GetCannonID() int32 {
	if x != nil {
		return x.CannonID
	}
	return 0
}

func (x *S3080008_SeatInfo) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *S3080008_SeatInfo) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *S3080008_SeatInfo) GetFaceFrameID() int32 {
	if x != nil {
		return x.FaceFrameID
	}
	return 0
}

type S3080008_FishInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FishID        int32                  `protobuf:"varint,1,opt,name=FishID,proto3" json:"FishID,omitempty"`
	KindID        int32                  `protobuf:"varint,2,opt,name=KindID,proto3" json:"KindID,omitempty"`
	Path          int32                  `protobuf:"varint,3,opt,name=Path,proto3" json:"Path,omitempty"`
	StartTime     int64                  `protobuf:"varint,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	CurrentTime   int64                  `protobuf:"varint,5,opt,name=CurrentTime,proto3" json:"CurrentTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080008_FishInfo) Reset() {
	*x = S3080008_FishInfo{}
	mi := &file_fish_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080008_FishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080008_FishInfo) ProtoMessage() {}

func (x *S3080008_FishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080008_FishInfo.ProtoReflect.Descriptor instead.
func (*S3080008_FishInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{15, 1}
}

func (x *S3080008_FishInfo) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *S3080008_FishInfo) GetKindID() int32 {
	if x != nil {
		return x.KindID
	}
	return 0
}

func (x *S3080008_FishInfo) GetPath() int32 {
	if x != nil {
		return x.Path
	}
	return 0
}

func (x *S3080008_FishInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *S3080008_FishInfo) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

type S3080008_SkillInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TableID       int32                  `protobuf:"varint,2,opt,name=TableID,proto3" json:"TableID,omitempty"`
	SeatNo        int32                  `protobuf:"varint,3,opt,name=SeatNo,proto3" json:"SeatNo,omitempty"`
	SkillType     int32                  `protobuf:"varint,4,opt,name=SkillType,proto3" json:"SkillType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3080008_SkillInfo) Reset() {
	*x = S3080008_SkillInfo{}
	mi := &file_fish_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3080008_SkillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3080008_SkillInfo) ProtoMessage() {}

func (x *S3080008_SkillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3080008_SkillInfo.ProtoReflect.Descriptor instead.
func (*S3080008_SkillInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{15, 2}
}

func (x *S3080008_SkillInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *S3080008_SkillInfo) GetTableID() int32 {
	if x != nil {
		return x.TableID
	}
	return 0
}

func (x *S3080008_SkillInfo) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *S3080008_SkillInfo) GetSkillType() int32 {
	if x != nil {
		return x.SkillType
	}
	return 0
}

type P3080001_FishInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FishID        int32                  `protobuf:"varint,1,opt,name=FishID,proto3" json:"FishID,omitempty"`
	KindID        int32                  `protobuf:"varint,2,opt,name=KindID,proto3" json:"KindID,omitempty"`
	Path          int32                  `protobuf:"varint,3,opt,name=Path,proto3" json:"Path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080001_FishInfo) Reset() {
	*x = P3080001_FishInfo{}
	mi := &file_fish_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080001_FishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080001_FishInfo) ProtoMessage() {}

func (x *P3080001_FishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080001_FishInfo.ProtoReflect.Descriptor instead.
func (*P3080001_FishInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{16, 0}
}

func (x *P3080001_FishInfo) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *P3080001_FishInfo) GetKindID() int32 {
	if x != nil {
		return x.KindID
	}
	return 0
}

func (x *P3080001_FishInfo) GetPath() int32 {
	if x != nil {
		return x.Path
	}
	return 0
}

type P3080009_FishInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FishID        int32                  `protobuf:"varint,1,opt,name=FishID,proto3" json:"FishID,omitempty"`
	KindID        int32                  `protobuf:"varint,2,opt,name=KindID,proto3" json:"KindID,omitempty"`
	Path          int32                  `protobuf:"varint,3,opt,name=Path,proto3" json:"Path,omitempty"`
	SpawnTime     int64                  `protobuf:"varint,4,opt,name=SpawnTime,proto3" json:"SpawnTime,omitempty"` //出鱼时间 单位毫秒
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080009_FishInfo) Reset() {
	*x = P3080009_FishInfo{}
	mi := &file_fish_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080009_FishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080009_FishInfo) ProtoMessage() {}

func (x *P3080009_FishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080009_FishInfo.ProtoReflect.Descriptor instead.
func (*P3080009_FishInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{24, 0}
}

func (x *P3080009_FishInfo) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *P3080009_FishInfo) GetKindID() int32 {
	if x != nil {
		return x.KindID
	}
	return 0
}

func (x *P3080009_FishInfo) GetPath() int32 {
	if x != nil {
		return x.Path
	}
	return 0
}

func (x *P3080009_FishInfo) GetSpawnTime() int64 {
	if x != nil {
		return x.SpawnTime
	}
	return 0
}

type P3080010_CaptureFish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FishID        int32                  `protobuf:"varint,1,opt,name=FishID,proto3" json:"FishID,omitempty"`
	Score         float64                `protobuf:"fixed64,2,opt,name=Score,proto3" json:"Score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080010_CaptureFish) Reset() {
	*x = P3080010_CaptureFish{}
	mi := &file_fish_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080010_CaptureFish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080010_CaptureFish) ProtoMessage() {}

func (x *P3080010_CaptureFish) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080010_CaptureFish.ProtoReflect.Descriptor instead.
func (*P3080010_CaptureFish) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{25, 0}
}

func (x *P3080010_CaptureFish) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *P3080010_CaptureFish) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type P3080015_FishInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FishID        int32                  `protobuf:"varint,1,opt,name=FishID,proto3" json:"FishID,omitempty"`
	Path          int32                  `protobuf:"varint,2,opt,name=Path,proto3" json:"Path,omitempty"`
	ElapsedTime   int64                  `protobuf:"varint,3,opt,name=ElapsedTime,proto3" json:"ElapsedTime,omitempty"` //毫秒
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P3080015_FishInfo) Reset() {
	*x = P3080015_FishInfo{}
	mi := &file_fish_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P3080015_FishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P3080015_FishInfo) ProtoMessage() {}

func (x *P3080015_FishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P3080015_FishInfo.ProtoReflect.Descriptor instead.
func (*P3080015_FishInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{29, 0}
}

func (x *P3080015_FishInfo) GetFishID() int32 {
	if x != nil {
		return x.FishID
	}
	return 0
}

func (x *P3080015_FishInfo) GetPath() int32 {
	if x != nil {
		return x.Path
	}
	return 0
}

func (x *P3080015_FishInfo) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

var File_fish_proto protoreflect.FileDescriptor

const file_fish_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"fish.proto\"*\n" +
	"\bC3080001\x12\x1e\n" +
	"\n" +
	"GameKindID\x18\x01 \x01(\x05R\n" +
	"GameKindID\"\xb7\x02\n" +
	"\bS3080001\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12(\n" +
	"\x05Rooms\x18\x02 \x03(\v2\x12.S3080001.RoomInfoR\x05Rooms\x1a\xe6\x01\n" +
	"\bRoomInfo\x12\x16\n" +
	"\x06RoomID\x18\x01 \x01(\x05R\x06RoomID\x12\x1e\n" +
	"\n" +
	"BaseAmount\x18\x02 \x01(\x01R\n" +
	"BaseAmount\x12&\n" +
	"\x0eMinEnterAmount\x18\x03 \x01(\x01R\x0eMinEnterAmount\x12&\n" +
	"\x0eMaxEnterAmount\x18\x04 \x01(\x01R\x0eMaxEnterAmount\x12\x1a\n" +
	"\bRoomName\x18\x05 \x01(\tR\bRoomName\x12\x1a\n" +
	"\bMinRatio\x18\x06 \x01(\x01R\bMinRatio\x12\x1a\n" +
	"\bMaxRatio\x18\a \x01(\x01R\bMaxRatio\":\n" +
	"\bC3080002\x12\x16\n" +
	"\x06RoomID\x18\x01 \x01(\x05R\x06RoomID\x12\x16\n" +
	"\x06UserID\x18\x02 \x01(\tR\x06UserID\"\xaa\x06\n" +
	"\bS3080002\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12\x16\n" +
	"\x06RoomID\x18\x02 \x01(\x05R\x06RoomID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x04 \x01(\x05R\x06SeatNo\x12(\n" +
	"\x05Seats\x18\x05 \x03(\v2\x12.S3080002.SeatInfoR\x05Seats\x12*\n" +
	"\x06Fishes\x18\x06 \x03(\v2\x12.S3080002.FishInfoR\x06Fishes\x12+\n" +
	"\x06Skills\x18\a \x03(\v2\x13.S3080002.SkillInfoR\x06Skills\x12\x16\n" +
	"\x06TideID\x18\b \x01(\x05R\x06TideID\x1a\x98\x02\n" +
	"\bSeatInfo\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x02 \x01(\x05R\x06SeatNo\x12\x16\n" +
	"\x06FaceID\x18\x03 \x01(\x05R\x06FaceID\x12\x16\n" +
	"\x06UserID\x18\x04 \x01(\tR\x06UserID\x12\x1a\n" +
	"\bUserName\x18\x05 \x01(\tR\bUserName\x12\x1e\n" +
	"\n" +
	"UserAmount\x18\x06 \x01(\x01R\n" +
	"UserAmount\x12\x1a\n" +
	"\bCannonID\x18\a \x01(\x05R\bCannonID\x12\x14\n" +
	"\x05Ratio\x18\b \x01(\x01R\x05Ratio\x12\x1a\n" +
	"\bVipLevel\x18\t \x01(\x05R\bVipLevel\x12 \n" +
	"\vFaceFrameID\x18\n" +
	" \x01(\x05R\vFaceFrameID\x1a\x8e\x01\n" +
	"\bFishInfo\x12\x16\n" +
	"\x06FishID\x18\x01 \x01(\x05R\x06FishID\x12\x16\n" +
	"\x06KindID\x18\x02 \x01(\x05R\x06KindID\x12\x12\n" +
	"\x04Path\x18\x03 \x01(\x05R\x04Path\x12\x1c\n" +
	"\tStartTime\x18\x04 \x01(\x03R\tStartTime\x12 \n" +
	"\vCurrentTime\x18\x05 \x01(\x03R\vCurrentTime\x1as\n" +
	"\tSkillInfo\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x03 \x01(\x05R\x06SeatNo\x12\x1c\n" +
	"\tSkillType\x18\x04 \x01(\x05R\tSkillType\"\"\n" +
	"\bC3080003\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\"\xff\x01\n" +
	"\bS3080003\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12.\n" +
	"\aCannons\x18\x02 \x03(\v2\x14.S3080003.CannonInfoR\aCannons\x1a\xa8\x01\n" +
	"\n" +
	"CannonInfo\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x05R\x02ID\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x1c\n" +
	"\tPeriodDay\x18\x03 \x01(\x05R\tPeriodDay\x12\x1e\n" +
	"\n" +
	"CostWealth\x18\x04 \x01(\x01R\n" +
	"CostWealth\x12\x1c\n" +
	"\tuseStatus\x18\x05 \x01(\x05R\tuseStatus\x12\x1a\n" +
	"\bLefttime\x18\x06 \x01(\x03R\bLefttime\"\n" +
	"\n" +
	"\bC3080004\"\x9c\x01\n" +
	"\bS3080004\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12(\n" +
	"\x05Kinds\x18\x02 \x03(\v2\x12.S3080004.FishKindR\x05Kinds\x1aL\n" +
	"\bFishKind\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x05R\x02ID\x12\x1a\n" +
	"\bKindName\x18\x02 \x01(\tR\bKindName\x12\x14\n" +
	"\x05Score\x18\x03 \x01(\x01R\x05Score\"\x8a\x01\n" +
	"\bC3080005\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x03 \x01(\x05R\x06SeatNo\x12\x1c\n" +
	"\tSkillType\x18\x04 \x01(\x05R\tSkillType\x12\x16\n" +
	"\x06OpType\x18\x05 \x01(\x05R\x06OpType\"Z\n" +
	"\bS3080005\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12\x1c\n" +
	"\tSkillType\x18\x02 \x01(\x05R\tSkillType\x12\x16\n" +
	"\x06OpType\x18\x03 \x01(\x05R\x06OpType\">\n" +
	"\bC3080006\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x1a\n" +
	"\bCannonID\x18\x02 \x01(\x05R\bCannonID\"|\n" +
	"\bS3080006\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12\x1e\n" +
	"\n" +
	"CostWealth\x18\x02 \x01(\x01R\n" +
	"CostWealth\x12\x1a\n" +
	"\bCannonID\x18\x03 \x01(\x05R\bCannonID\x12\x1a\n" +
	"\bLefttime\x18\x04 \x01(\x03R\bLefttime\">\n" +
	"\bC3080007\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x1a\n" +
	"\bCannonID\x18\x02 \x01(\x05R\bCannonID\"@\n" +
	"\bS3080007\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12\x1a\n" +
	"\bCannonID\x18\x02 \x01(\x05R\bCannonID\"l\n" +
	"\bC3080008\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x16\n" +
	"\x06RoomID\x18\x03 \x01(\x05R\x06RoomID\x12\x18\n" +
	"\aTableID\x18\x04 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x05 \x01(\x05R\x06SeatNo\"\xaa\x06\n" +
	"\bS3080008\x12\x18\n" +
	"\aRetCode\x18\x01 \x01(\x05R\aRetCode\x12\x16\n" +
	"\x06RoomID\x18\x02 \x01(\x05R\x06RoomID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x04 \x01(\x05R\x06SeatNo\x12(\n" +
	"\x05Seats\x18\x05 \x03(\v2\x12.S3080008.SeatInfoR\x05Seats\x12*\n" +
	"\x06Fishes\x18\x06 \x03(\v2\x12.S3080008.FishInfoR\x06Fishes\x12+\n" +
	"\x06Skills\x18\a \x03(\v2\x13.S3080008.SkillInfoR\x06Skills\x12\x16\n" +
	"\x06TideID\x18\b \x01(\x05R\x06TideID\x1a\x98\x02\n" +
	"\bSeatInfo\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x02 \x01(\x05R\x06SeatNo\x12\x16\n" +
	"\x06FaceID\x18\x03 \x01(\x05R\x06FaceID\x12\x16\n" +
	"\x06UserID\x18\x04 \x01(\tR\x06UserID\x12\x1a\n" +
	"\bUserName\x18\x05 \x01(\tR\bUserName\x12\x1e\n" +
	"\n" +
	"UserAmount\x18\x06 \x01(\x01R\n" +
	"UserAmount\x12\x1a\n" +
	"\bCannonID\x18\a \x01(\x05R\bCannonID\x12\x14\n" +
	"\x05Ratio\x18\b \x01(\x01R\x05Ratio\x12\x1a\n" +
	"\bVipLevel\x18\t \x01(\x05R\bVipLevel\x12 \n" +
	"\vFaceFrameID\x18\n" +
	" \x01(\x05R\vFaceFrameID\x1a\x8e\x01\n" +
	"\bFishInfo\x12\x16\n" +
	"\x06FishID\x18\x01 \x01(\x05R\x06FishID\x12\x16\n" +
	"\x06KindID\x18\x02 \x01(\x05R\x06KindID\x12\x12\n" +
	"\x04Path\x18\x03 \x01(\x05R\x04Path\x12\x1c\n" +
	"\tStartTime\x18\x04 \x01(\x03R\tStartTime\x12 \n" +
	"\vCurrentTime\x18\x05 \x01(\x03R\vCurrentTime\x1as\n" +
	"\tSkillInfo\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x03 \x01(\x05R\x06SeatNo\x12\x1c\n" +
	"\tSkillType\x18\x04 \x01(\x05R\tSkillType\"\xb8\x01\n" +
	"\bP3080001\x12*\n" +
	"\x06Fishes\x18\x01 \x03(\v2\x12.P3080001.FishInfoR\x06Fishes\x12\x16\n" +
	"\x06RoomID\x18\x02 \x01(\x05R\x06RoomID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x1aN\n" +
	"\bFishInfo\x12\x16\n" +
	"\x06FishID\x18\x01 \x01(\x05R\x06FishID\x12\x16\n" +
	"\x06KindID\x18\x02 \x01(\x05R\x06KindID\x12\x12\n" +
	"\x04Path\x18\x03 \x01(\x05R\x04Path\"\x98\x02\n" +
	"\bP3080002\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x03 \x01(\x05R\x06SeatNo\x12\x1a\n" +
	"\bUserName\x18\x04 \x01(\tR\bUserName\x12\x1e\n" +
	"\n" +
	"UserWealth\x18\x05 \x01(\x01R\n" +
	"UserWealth\x12\x16\n" +
	"\x06FaceID\x18\x06 \x01(\x05R\x06FaceID\x12\x1a\n" +
	"\bCannonID\x18\a \x01(\x05R\bCannonID\x12\x14\n" +
	"\x05Ratio\x18\b \x01(\x01R\x05Ratio\x12\x1a\n" +
	"\bVipLevel\x18\t \x01(\x05R\bVipLevel\x12 \n" +
	"\vFaceFrameID\x18\n" +
	" \x01(\x05R\vFaceFrameID\"T\n" +
	"\bP3080003\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x02 \x01(\x05R\x06SeatNo\x12\x16\n" +
	"\x06UserID\x18\x03 \x01(\tR\x06UserID\"\xf2\x01\n" +
	"\bP3080004\x12\x1a\n" +
	"\bBulletID\x18\x01 \x01(\x05R\bBulletID\x12\x16\n" +
	"\x06UserID\x18\x02 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x04 \x01(\x05R\x06SeatNo\x12\x18\n" +
	"\aVectorX\x18\x05 \x01(\x01R\aVectorX\x12\x18\n" +
	"\aVectorY\x18\x06 \x01(\x01R\aVectorY\x12\x14\n" +
	"\x05Speed\x18\a \x01(\x05R\x05Speed\x12\x1e\n" +
	"\n" +
	"UserAmount\x18\b \x01(\x01R\n" +
	"UserAmount\x12\x16\n" +
	"\x06FishID\x18\t \x01(\x05R\x06FishID\"$\n" +
	"\bP3080005\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\"\xc4\x01\n" +
	"\bP3080006\x12\x1a\n" +
	"\bBulletID\x18\x01 \x01(\x05R\bBulletID\x12\x16\n" +
	"\x06FishID\x18\x02 \x01(\x05R\x06FishID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x04 \x01(\x05R\x06SeatNo\x12\x14\n" +
	"\x05Ratio\x18\x05 \x01(\x01R\x05Ratio\x12\x1c\n" +
	"\tAddWealth\x18\x06 \x01(\x01R\tAddWealth\x12\x1e\n" +
	"\n" +
	"UserAmount\x18\a \x01(\x01R\n" +
	"UserAmount\"\x8a\x01\n" +
	"\bP3080007\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x03 \x01(\x05R\x06SeatNo\x12\x1c\n" +
	"\tSkillType\x18\x04 \x01(\x05R\tSkillType\x12\x16\n" +
	"\x06OpType\x18\x05 \x01(\x05R\x06OpType\"R\n" +
	"\bP3080008\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x02 \x01(\x05R\x06SeatNo\x12\x14\n" +
	"\x05Ratio\x18\x03 \x01(\x01R\x05Ratio\"\xbe\x01\n" +
	"\bP3080009\x12*\n" +
	"\x06Fishes\x18\x01 \x03(\v2\x12.P3080009.FishInfoR\x06Fishes\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x1al\n" +
	"\bFishInfo\x12\x16\n" +
	"\x06FishID\x18\x01 \x01(\x05R\x06FishID\x12\x16\n" +
	"\x06KindID\x18\x02 \x01(\x05R\x06KindID\x12\x12\n" +
	"\x04Path\x18\x03 \x01(\x05R\x04Path\x12\x1c\n" +
	"\tSpawnTime\x18\x04 \x01(\x03R\tSpawnTime\"\xb0\x02\n" +
	"\bP3080010\x12\x1a\n" +
	"\bBulletID\x18\x01 \x01(\x05R\bBulletID\x12\x16\n" +
	"\x06FishID\x18\x02 \x01(\x05R\x06FishID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x04 \x01(\x05R\x06SeatNo\x12\x14\n" +
	"\x05Ratio\x18\x05 \x01(\x01R\x05Ratio\x12\x1c\n" +
	"\tAddWealth\x18\x06 \x01(\x01R\tAddWealth\x12-\n" +
	"\x06Fishes\x18\a \x03(\v2\x15.P3080010.CaptureFishR\x06Fishes\x12\x1e\n" +
	"\n" +
	"UserAmount\x18\b \x01(\x01R\n" +
	"UserAmount\x1a;\n" +
	"\vCaptureFish\x12\x16\n" +
	"\x06FishID\x18\x01 \x01(\x05R\x06FishID\x12\x14\n" +
	"\x05Score\x18\x02 \x01(\x01R\x05Score\"$\n" +
	"\bP3080011\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\"\\\n" +
	"\bP3080013\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x02 \x01(\x05R\x06SeatNo\x12\x1e\n" +
	"\n" +
	"UserWealth\x18\x03 \x01(\x01R\n" +
	"UserWealth\"X\n" +
	"\bP3080014\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x02 \x01(\x05R\x06SeatNo\x12\x1a\n" +
	"\bCannonID\x18\x03 \x01(\x05R\bCannonID\"\xc2\x01\n" +
	"\bP3080015\x12\x16\n" +
	"\x06RoomID\x18\x01 \x01(\x05R\x06RoomID\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\x12*\n" +
	"\x06Fishes\x18\x03 \x03(\v2\x12.P3080015.FishInfoR\x06Fishes\x1aX\n" +
	"\bFishInfo\x12\x16\n" +
	"\x06FishID\x18\x01 \x01(\x05R\x06FishID\x12\x12\n" +
	"\x04Path\x18\x02 \x01(\x05R\x04Path\x12 \n" +
	"\vElapsedTime\x18\x03 \x01(\x03R\vElapsedTime\"X\n" +
	"\bP3080016\x12\x18\n" +
	"\aTableID\x18\x01 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06TideID\x18\x02 \x01(\x05R\x06TideID\x12\x1a\n" +
	"\bWaveTime\x18\x03 \x01(\x03R\bWaveTime\"<\n" +
	"\bP3080017\x12\x16\n" +
	"\x06Fishes\x18\x01 \x03(\x05R\x06Fishes\x12\x18\n" +
	"\aTableID\x18\x02 \x01(\x05R\aTableID\"@\n" +
	"\bN3080001\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x1c\n" +
	"\tLeaveType\x18\x02 \x01(\x05R\tLeaveType\"\xe8\x01\n" +
	"\bN3080002\x12\x1a\n" +
	"\bBulletID\x18\x01 \x01(\x05R\bBulletID\x12\x16\n" +
	"\x06UserID\x18\x02 \x01(\tR\x06UserID\x12\x18\n" +
	"\aTableID\x18\x03 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x04 \x01(\x05R\x06SeatNo\x12\x18\n" +
	"\aVectorX\x18\x05 \x01(\x01R\aVectorX\x12\x18\n" +
	"\aVectorY\x18\x06 \x01(\x01R\aVectorY\x12\x14\n" +
	"\x05Speed\x18\a \x01(\x05R\x05Speed\x12\x14\n" +
	"\x05Ratio\x18\b \x01(\x01R\x05Ratio\x12\x16\n" +
	"\x06FishID\x18\t \x01(\x05R\x06FishID\"\x88\x01\n" +
	"\bN3080003\x12\x1a\n" +
	"\bBulletID\x18\x01 \x01(\x05R\bBulletID\x12\x16\n" +
	"\x06UserID\x18\x02 \x01(\tR\x06UserID\x12\x16\n" +
	"\x06FishID\x18\x03 \x01(\x05R\x06FishID\x12\x18\n" +
	"\aTableID\x18\x04 \x01(\x05R\aTableID\x12\x16\n" +
	"\x06SeatNo\x18\x05 \x01(\x05R\x06SeatNo\"8\n" +
	"\bN3080004\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\tR\x06UserID\x12\x14\n" +
	"\x05Ratio\x18\x02 \x01(\x01R\x05RatioB\aZ\x05./plrb\x06proto3"

var (
	file_fish_proto_rawDescOnce sync.Once
	file_fish_proto_rawDescData []byte
)

func file_fish_proto_rawDescGZIP() []byte {
	file_fish_proto_rawDescOnce.Do(func() {
		file_fish_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fish_proto_rawDesc), len(file_fish_proto_rawDesc)))
	})
	return file_fish_proto_rawDescData
}

var file_fish_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_fish_proto_goTypes = []any{
	(*C3080001)(nil),             // 0: C3080001
	(*S3080001)(nil),             // 1: S3080001
	(*C3080002)(nil),             // 2: C3080002
	(*S3080002)(nil),             // 3: S3080002
	(*C3080003)(nil),             // 4: C3080003
	(*S3080003)(nil),             // 5: S3080003
	(*C3080004)(nil),             // 6: C3080004
	(*S3080004)(nil),             // 7: S3080004
	(*C3080005)(nil),             // 8: C3080005
	(*S3080005)(nil),             // 9: S3080005
	(*C3080006)(nil),             // 10: C3080006
	(*S3080006)(nil),             // 11: S3080006
	(*C3080007)(nil),             // 12: C3080007
	(*S3080007)(nil),             // 13: S3080007
	(*C3080008)(nil),             // 14: C3080008
	(*S3080008)(nil),             // 15: S3080008
	(*P3080001)(nil),             // 16: P3080001
	(*P3080002)(nil),             // 17: P3080002
	(*P3080003)(nil),             // 18: P3080003
	(*P3080004)(nil),             // 19: P3080004
	(*P3080005)(nil),             // 20: P3080005
	(*P3080006)(nil),             // 21: P3080006
	(*P3080007)(nil),             // 22: P3080007
	(*P3080008)(nil),             // 23: P3080008
	(*P3080009)(nil),             // 24: P3080009
	(*P3080010)(nil),             // 25: P3080010
	(*P3080011)(nil),             // 26: P3080011
	(*P3080013)(nil),             // 27: P3080013
	(*P3080014)(nil),             // 28: P3080014
	(*P3080015)(nil),             // 29: P3080015
	(*P3080016)(nil),             // 30: P3080016
	(*P3080017)(nil),             // 31: P3080017
	(*N3080001)(nil),             // 32: N3080001
	(*N3080002)(nil),             // 33: N3080002
	(*N3080003)(nil),             // 34: N3080003
	(*N3080004)(nil),             // 35: N3080004
	(*S3080001_RoomInfo)(nil),    // 36: S3080001.RoomInfo
	(*S3080002_SeatInfo)(nil),    // 37: S3080002.SeatInfo
	(*S3080002_FishInfo)(nil),    // 38: S3080002.FishInfo
	(*S3080002_SkillInfo)(nil),   // 39: S3080002.SkillInfo
	(*S3080003_CannonInfo)(nil),  // 40: S3080003.CannonInfo
	(*S3080004_FishKind)(nil),    // 41: S3080004.FishKind
	(*S3080008_SeatInfo)(nil),    // 42: S3080008.SeatInfo
	(*S3080008_FishInfo)(nil),    // 43: S3080008.FishInfo
	(*S3080008_SkillInfo)(nil),   // 44: S3080008.SkillInfo
	(*P3080001_FishInfo)(nil),    // 45: P3080001.FishInfo
	(*P3080009_FishInfo)(nil),    // 46: P3080009.FishInfo
	(*P3080010_CaptureFish)(nil), // 47: P3080010.CaptureFish
	(*P3080015_FishInfo)(nil),    // 48: P3080015.FishInfo
}
var file_fish_proto_depIdxs = []int32{
	36, // 0: S3080001.Rooms:type_name -> S3080001.RoomInfo
	37, // 1: S3080002.Seats:type_name -> S3080002.SeatInfo
	38, // 2: S3080002.Fishes:type_name -> S3080002.FishInfo
	39, // 3: S3080002.Skills:type_name -> S3080002.SkillInfo
	40, // 4: S3080003.Cannons:type_name -> S3080003.CannonInfo
	41, // 5: S3080004.Kinds:type_name -> S3080004.FishKind
	42, // 6: S3080008.Seats:type_name -> S3080008.SeatInfo
	43, // 7: S3080008.Fishes:type_name -> S3080008.FishInfo
	44, // 8: S3080008.Skills:type_name -> S3080008.SkillInfo
	45, // 9: P3080001.Fishes:type_name -> P3080001.FishInfo
	46, // 10: P3080009.Fishes:type_name -> P3080009.FishInfo
	47, // 11: P3080010.Fishes:type_name -> P3080010.CaptureFish
	48, // 12: P3080015.Fishes:type_name -> P3080015.FishInfo
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_fish_proto_init() }
func file_fish_proto_init() {
	if File_fish_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fish_proto_rawDesc), len(file_fish_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fish_proto_goTypes,
		DependencyIndexes: file_fish_proto_depIdxs,
		MessageInfos:      file_fish_proto_msgTypes,
	}.Build()
	File_fish_proto = out.File
	file_fish_proto_goTypes = nil
	file_fish_proto_depIdxs = nil
}
